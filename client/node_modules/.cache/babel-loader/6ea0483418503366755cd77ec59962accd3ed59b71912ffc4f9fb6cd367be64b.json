{"ast":null,"code":"var _jsxFileName = \"/Users/sahil/Documents/video-resizer-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [video1, setVideo1] = useState('');\n  const [video2, setVideo2] = useState('');\n  const [processedVideoUrl, setProcessedVideoUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const handleProcessVideo = async () => {\n    setLoading(true);\n    setErrorMsg('');\n    setProcessedVideoUrl(null);\n    try {\n      const response = await fetch('http://localhost:5040/process-video', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          video1,\n          video2\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || 'Error processing the video');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        setProcessedVideoUrl(data.processed_video_url);\n      } else {\n        throw new Error(data.message || 'Unknown error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setErrorMsg(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Processing App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter two video URLs to concatenate and scale.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Video 1 URL: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: video1,\n        onChange: e => setVideo1(e.target.value),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Video 2 URL: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: video2,\n        onChange: e => setVideo2(e.target.value),\n        style: {\n          width: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProcessVideo,\n      disabled: loading || !video1 || !video2,\n      children: loading ? 'Processing...' : 'Process Videos'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        color: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \" \", errorMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), processedVideoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Video Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: processedVideoUrl,\n        controls: true,\n        style: {\n          maxWidth: '100%',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ltm2hWUJYOGhhbV8MOaY41A4ZYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","video1","setVideo1","video2","setVideo2","processedVideoUrl","setProcessedVideoUrl","loading","setLoading","errorMsg","setErrorMsg","handleProcessVideo","response","fetch","method","headers","body","JSON","stringify","ok","errData","json","Error","message","data","status","processed_video_url","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","width","onClick","disabled","marginTop","color","src","controls","maxWidth","border","_c","$RefreshReg$"],"sources":["/Users/sahil/Documents/video-resizer-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [video1, setVideo1] = useState('');\n  const [video2, setVideo2] = useState('');\n  const [processedVideoUrl, setProcessedVideoUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleProcessVideo = async () => {\n    setLoading(true);\n    setErrorMsg('');\n    setProcessedVideoUrl(null);\n\n    try {\n      const response = await fetch('http://localhost:5040/process-video', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          video1,\n          video2,\n        }),\n      });\n\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message || 'Error processing the video');\n      }\n\n      const data = await response.json();\n      if (data.status === 'success') {\n        setProcessedVideoUrl(data.processed_video_url);\n      } else {\n        throw new Error(data.message || 'Unknown error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setErrorMsg(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ margin: '40px' }}>\n      <h1>Video Processing App</h1>\n      <p>Enter two video URLs to concatenate and scale.</p>\n\n      <div style={{ marginBottom: '10px' }}>\n        <label>Video 1 URL: </label>\n        <input\n          type=\"text\"\n          value={video1}\n          onChange={(e) => setVideo1(e.target.value)}\n          style={{ width: '400px' }}\n        />\n      </div>\n\n      <div style={{ marginBottom: '10px' }}>\n        <label>Video 2 URL: </label>\n        <input\n          type=\"text\"\n          value={video2}\n          onChange={(e) => setVideo2(e.target.value)}\n          style={{ width: '400px' }}\n        />\n      </div>\n\n      <button onClick={handleProcessVideo} disabled={loading || !video1 || !video2}>\n        {loading ? 'Processing...' : 'Process Videos'}\n      </button>\n\n      {errorMsg && (\n        <div style={{ marginTop: '20px', color: 'red' }}>\n          <strong>Error:</strong> {errorMsg}\n        </div>\n      )}\n\n      {processedVideoUrl && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Processed Video Preview</h3>\n          <video\n            src={processedVideoUrl}\n            controls\n            style={{ maxWidth: '100%', border: '1px solid #ccc' }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}